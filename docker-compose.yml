version: '3.7'
services:
  db:
    image: 'postgres:latest'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
    networks:
      - ls

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      CLUSTER_ID: kafka-docker-cluster-1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@0.0.0.0:9093
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - ls

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - 9021:9021
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:9021'
    depends_on:
      - kafka
    networks:
      - ls

  kafka-ui:
    container_name: kafka-ui
    restart: unless-stopped
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - schema-registry
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kafka-docker-cluster-1
      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schema-registry:9021
    networks:
      - ls

  redis:
    image: 'redis:7.0-alpine'
    command: redis-server
    ports:
      - '7936:7936'
    volumes:
      - redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - ls

  rails:
    build: ./
    command: /usr/bin/supervisord
    ports:
      - '3001:3001'
    volumes:
      - .:/appeals-consumer
    depends_on:
      - db
      - kafka-ui
      - redis
      - localstack-consumer
    env_file: 
      - ".env"
    dns:
      - 10.0.2.20
    networks:
      - ls

  localstack-consumer:
    platform: linux/amd64
    container_name: localstack-consumer
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - SERVICES=sqs
    volumes:
      - ./local/sqs/conf:/conf
    networks:
      ls:
        ipv4_address: 10.0.2.20

volumes:
  postgres:
  redis:

networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24
